// Vocabulario organizado por categor√≠as para el juego de memoria

export interface WordPair {
  id: number;
  english: string;
  spanish: string;
  emoji: string;
  category: string;
}

export const vocabulary: Record<string, WordPair[]> = {
  animals: [
    { id: 1, english: "Cat", spanish: "Gato", emoji: "üê±", category: "animals" },
    { id: 2, english: "Dog", spanish: "Perro", emoji: "üê∂", category: "animals" },
    { id: 3, english: "Bird", spanish: "P√°jaro", emoji: "üê¶", category: "animals" },
    { id: 4, english: "Fish", spanish: "Pez", emoji: "üêü", category: "animals" },
    { id: 5, english: "Rabbit", spanish: "Conejo", emoji: "üê∞", category: "animals" },
    { id: 6, english: "Bear", spanish: "Oso", emoji: "üêª", category: "animals" },
    { id: 7, english: "Lion", spanish: "Le√≥n", emoji: "ü¶Å", category: "animals" },
    { id: 8, english: "Elephant", spanish: "Elefante", emoji: "üêò", category: "animals" },
  ],
  
  household: [
    { id: 11, english: "House", spanish: "Casa", emoji: "üè†", category: "household" },
    { id: 12, english: "Door", spanish: "Puerta", emoji: "üö™", category: "household" },
    { id: 13, english: "Window", spanish: "Ventana", emoji: "ü™ü", category: "household" },
    { id: 14, english: "Chair", spanish: "Silla", emoji: "ü™ë", category: "household" },
    { id: 15, english: "Table", spanish: "Mesa", emoji: "ü™ë", category: "household" },
    { id: 16, english: "Bed", spanish: "Cama", emoji: "üõèÔ∏è", category: "household" },
    { id: 17, english: "Lamp", spanish: "L√°mpara", emoji: "üí°", category: "household" },
    { id: 18, english: "Clock", spanish: "Reloj", emoji: "üïê", category: "household" },
  ],

  transportation: [
    { id: 21, english: "Car", spanish: "Carro", emoji: "üöó", category: "transportation" },
    { id: 22, english: "Bus", spanish: "Autob√∫s", emoji: "üöå", category: "transportation" },
    { id: 23, english: "Train", spanish: "Tren", emoji: "üöÇ", category: "transportation" },
    { id: 24, english: "Airplane", spanish: "Avi√≥n", emoji: "‚úàÔ∏è", category: "transportation" },
    { id: 25, english: "Bicycle", spanish: "Bicicleta", emoji: "üö≤", category: "transportation" },
    { id: 26, english: "Boat", spanish: "Barco", emoji: "üö¢", category: "transportation" },
    { id: 27, english: "Motorcycle", spanish: "Motocicleta", emoji: "üèçÔ∏è", category: "transportation" },
    { id: 28, english: "Helicopter", spanish: "Helic√≥ptero", emoji: "üöÅ", category: "transportation" },
  ],

  nature: [
    { id: 31, english: "Tree", spanish: "√Årbol", emoji: "üå≥", category: "nature" },
    { id: 32, english: "Flower", spanish: "Flor", emoji: "üå∏", category: "nature" },
    { id: 33, english: "Sun", spanish: "Sol", emoji: "‚òÄÔ∏è", category: "nature" },
    { id: 34, english: "Moon", spanish: "Luna", emoji: "üåô", category: "nature" },
    { id: 35, english: "Star", spanish: "Estrella", emoji: "‚≠ê", category: "nature" },
    { id: 36, english: "Cloud", spanish: "Nube", emoji: "‚òÅÔ∏è", category: "nature" },
    { id: 37, english: "Rain", spanish: "Lluvia", emoji: "üåßÔ∏è", category: "nature" },
    { id: 38, english: "Mountain", spanish: "Monta√±a", emoji: "‚õ∞Ô∏è", category: "nature" },
  ],

  food: [
    { id: 41, english: "Apple", spanish: "Manzana", emoji: "üçé", category: "food" },
    { id: 42, english: "Banana", spanish: "Pl√°tano", emoji: "üçå", category: "food" },
    { id: 43, english: "Orange", spanish: "Naranja", emoji: "üçä", category: "food" },
    { id: 44, english: "Bread", spanish: "Pan", emoji: "üçû", category: "food" },
    { id: 45, english: "Milk", spanish: "Leche", emoji: "ü•õ", category: "food" },
    { id: 46, english: "Cheese", spanish: "Queso", emoji: "üßÄ", category: "food" },
    { id: 47, english: "Pizza", spanish: "Pizza", emoji: "üçï", category: "food" },
    { id: 48, english: "Cake", spanish: "Pastel", emoji: "üéÇ", category: "food" },
  ],

  school: [
    { id: 51, english: "Book", spanish: "Libro", emoji: "üìö", category: "school" },
    { id: 52, english: "Pencil", spanish: "L√°piz", emoji: "‚úèÔ∏è", category: "school" },
    { id: 53, english: "Pen", spanish: "Bol√≠grafo", emoji: "üñäÔ∏è", category: "school" },
    { id: 54, english: "Paper", spanish: "Papel", emoji: "üìÑ", category: "school" },
    { id: 55, english: "Backpack", spanish: "Mochila", emoji: "üéí", category: "school" },
    { id: 56, english: "Computer", spanish: "Computadora", emoji: "üíª", category: "school" },
    { id: 57, english: "Calculator", spanish: "Calculadora", emoji: "üßÆ", category: "school" },
    { id: 58, english: "Globe", spanish: "Globo terr√°queo", emoji: "üåç", category: "school" },
  ],
};

// Funci√≥n para obtener palabras aleatorias de una categor√≠a espec√≠fica
export function getRandomWordsFromCategory(category: string, count: number): WordPair[] {
  const categoryWords = vocabulary[category] || [];
  const shuffled = [...categoryWords].sort(() => Math.random() - 0.5);
  return shuffled.slice(0, Math.min(count, categoryWords.length));
}

// Funci√≥n para obtener palabras aleatorias de todas las categor√≠as
export function getRandomWordsFromAll(count: number): WordPair[] {
  const allWords = Object.values(vocabulary).flat();
  const shuffled = [...allWords].sort(() => Math.random() - 0.5);
  return shuffled.slice(0, Math.min(count, allWords.length));
}

// Funci√≥n para obtener palabras mixtas de m√∫ltiples categor√≠as
export function getMixedWords(categories: string[], wordsPerCategory: number): WordPair[] {
  const words: WordPair[] = [];
  
  categories.forEach(category => {
    const categoryWords = getRandomWordsFromCategory(category, wordsPerCategory);
    words.push(...categoryWords);
  });
  
  return words.sort(() => Math.random() - 0.5);
}

// Configuraci√≥n de niveles mejorada
export const levelConfigs = {
  easy: {
    wordsCount: 4,
    timeLimit: 120,
    categories: ['animals', 'household'],
    gridCols: 4,
    description: '4 parejas ‚Ä¢ Animales y hogar ‚Ä¢ 2 minutos',
  },
  medium: {
    wordsCount: 6,
    timeLimit: 180,
    categories: ['animals', 'household', 'food'],
    gridCols: 4,
    description: '6 parejas ‚Ä¢ Animales, hogar y comida ‚Ä¢ 3 minutos',
  },
  hard: {
    wordsCount: 8,
    timeLimit: 240,
    categories: ['animals', 'household', 'food', 'transportation'],
    gridCols: 4,
    description: '8 parejas ‚Ä¢ M√∫ltiples categor√≠as ‚Ä¢ 4 minutos',
  },
  expert: {
    wordsCount: 10,
    timeLimit: 300,
    categories: ['animals', 'household', 'food', 'transportation', 'nature', 'school'],
    gridCols: 5,
    description: '10 parejas ‚Ä¢ Todas las categor√≠as ‚Ä¢ 5 minutos',
  },
};

// Funci√≥n para obtener palabras seg√∫n la configuraci√≥n del nivel
export function getWordsForLevel(level: keyof typeof levelConfigs): WordPair[] {
  const config = levelConfigs[level];
  return getMixedWords(config.categories, Math.ceil(config.wordsCount / config.categories.length));
}
